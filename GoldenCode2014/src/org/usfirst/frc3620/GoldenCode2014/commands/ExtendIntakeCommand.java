// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3620.GoldenCode2014.commands;

import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3620.GoldenCode2014.Robot;

/**
 *
 */
public class ExtendIntakeCommand extends Command {

  

    public ExtendIntakeCommand() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.intakeSubsystem);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {

            
            if (Robot.oi.intakeReverseButton.get() == false && Robot.oi.extendIntakeButton.get() == true) {
                Robot.intakeSubsystem.intakeMotorOn();
                Robot.pneumaticSubsystem.loaderPushOut();
                Robot.intakeSubsystem.setHoopState(true); // hoop is down
            } else if (Robot.oi.intakeReverseButton.get() == true && Robot.oi.extendIntakeButton.get() == false) {
                Robot.intakeSubsystem.intakeMotorReverse();
                Robot.pneumaticSubsystem.loaderPushIn();
                Robot.intakeSubsystem.setHoopState(false);
            } else if (Robot.oi.intakeReverseButton.get() == true && Robot.oi.extendIntakeButton.get() == true) {
                Robot.intakeSubsystem.intakeMotorReverse();
                Robot.pneumaticSubsystem.loaderPushOut();
                Robot.intakeSubsystem.setHoopState(true);
            } else {
                Robot.pneumaticSubsystem.loaderPushIn();
                Robot.intakeSubsystem.intakeMotorOff();
                Robot.intakeSubsystem.setHoopState(false);
            }
        }
        // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
        Robot.pneumaticSubsystem.loaderPushIn();
        Robot.intakeSubsystem.intakeMotorOff();
        Robot.intakeSubsystem.setHoopState(false);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
